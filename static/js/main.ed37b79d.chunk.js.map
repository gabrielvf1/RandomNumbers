{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","teste","setTeste","timer","setTimer","max","setMax","min","Date","now","time","setTime","useEffect","interval","setInterval","rand","Math","round","random","handleClick","clearInterval","style","height","width","textAlign","onClick","old","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAqEeA,MAnEf,WAAgB,IAAD,EACaC,mBAAS,GADtB,mBACNC,EADM,KACCC,EADD,OAEaF,mBAAS,MAFtB,mBAENG,EAFM,KAECC,EAFD,OAGSJ,mBAAS,GAHlB,mBAGNK,EAHM,KAGDC,EAHC,OAISN,mBAAS,GAJlB,mBAINO,EAJM,aAWWP,mBAASQ,KAAKC,QAXzB,mBAWNC,EAXM,KAWAC,EAXA,KAiDb,OApCAC,qBAAU,WACR,IAAMC,EAAWC,aAAY,kBAAMH,EAAQH,KAAKC,SAAQN,GAExD,OAVkB,WAClB,IAAMY,EAAOC,KAAKC,MAAMD,KAAKE,UAAYX,EAAMF,GAAOA,GACtDH,EAASa,GAOTI,GACO,WACLC,cAAcP,MAEf,CAACH,IA+BF,sBAAKW,MAAO,CAAEC,OAAQ,OAAQC,MAAO,OAAQC,UAAW,UAAxD,UACE,gDACA,gCACE,6BAAKvB,IACL,wBAAQwB,QAjCI,WAChBrB,GAAS,SAACsB,GAER,OADAC,QAAQC,IAAIF,GACLA,EAAM,QA8BX,qBACA,wBAAQD,QA3BK,WACjBrB,GAAS,SAACsB,GAER,OADAC,QAAQC,IAAIF,GACLA,EAAM,IAAM,EAAIA,EAAM,IAAMA,MAwBjC,qBACA,sDAAyBvB,EAAzB,SACA,wBAAQsB,QAtBK,WACjBnB,GAAO,SAACoB,GAEN,OADAC,QAAQC,IAAIF,GACLA,EAAM,MAmBX,uBACA,wBAAQD,QAhBM,WAClBnB,GAAO,SAACoB,GAEN,OADAC,QAAQC,IAAIF,GACLA,EAAM,GAAK,EAAIA,EAAM,EAAIA,MAa9B,uBACA,oDACqBnB,EADrB,MAC6BF,YClDtBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ed37b79d.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [teste, setTeste] = useState(0);\n  const [timer, setTimer] = useState(3500);\n  const [max, setMax] = useState(6);\n  const [min, setMin] = useState(0);\n\n  const handleClick = () => {\n    const rand = Math.round(Math.random() * (min - max) + max);\n    setTeste(rand);\n  };\n\n  const [time, setTime] = useState(Date.now());\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), timer);\n    handleClick();\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n\n  const plusTimer = () => {\n    setTimer((old) => {\n      console.log(old);\n      return old + 500;\n    });\n  };\n\n  const minusTimer = () => {\n    setTimer((old) => {\n      console.log(old);\n      return old - 500 > 0 ? old - 500 : old;\n    });\n  };\n\n  const plusNumber = () => {\n    setMax((old) => {\n      console.log(old);\n      return old + 1;\n    });\n  };\n\n  const minusNumber = () => {\n    setMax((old) => {\n      console.log(old);\n      return old - 1 >= 0 ? old - 1 : old;\n    });\n  };\n\n  return (\n    <div style={{ height: \"100%\", width: \"100%\", textAlign: \"center\" }}>\n      <h4>Random Numbers</h4>\n      <div>\n        <h1>{teste}</h1>\n        <button onClick={plusTimer}>+ Tempo</button>\n        <button onClick={minusTimer}>- Tempo</button>\n        <h4>Tempo ate Alternar: {timer} ms</h4>\n        <button onClick={plusNumber}>+ Numeros</button>\n        <button onClick={minusNumber}>- Numeros</button>\n        <h4>\n          Range de Numeros: {min} - {max}\n        </h4>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}