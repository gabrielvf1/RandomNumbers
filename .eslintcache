[{"C:\\Users\\vf_ga\\Desktop\\TESTE\\teste\\react-gh-pages\\src\\App.js":"1","C:\\Users\\vf_ga\\Desktop\\TESTE\\teste\\react-gh-pages\\src\\reportWebVitals.js":"2"},{"size":708,"mtime":1610561469023,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1606756218049,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1pgrfcv",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vf_ga\\Desktop\\TESTE\\teste\\react-gh-pages\\src\\App.js",["11","12"],"import { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [teste, setTeste] = useState(0);\n  const handleClick = () => {\n    const min = 0;\n    const max = 6;\n    const rand = Math.round(Math.random() * (0 - 6) + 6);\n    setTeste(rand);\n  };\n\n  const [time, setTime] = useState(Date.now());\n\n  useEffect(() => {\n    const interval = setInterval(() => setTime(Date.now()), 1000);\n    handleClick();\n    return () => {\n      clearInterval(interval);\n    };\n  }, [time]);\n\n  return (\n    <div style={{ height: \"100%\", width: \"100%\", textAlign: \"center\" }}>\n      <h4>Random whole number every 5 seconds </h4>\n      <div>\n        <h1>{teste}</h1>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\vf_ga\\Desktop\\TESTE\\teste\\react-gh-pages\\src\\reportWebVitals.js",[],{"ruleId":"13","severity":1,"message":"14","line":6,"column":11,"nodeType":"15","messageId":"16","endLine":6,"endColumn":14},{"ruleId":"13","severity":1,"message":"17","line":7,"column":11,"nodeType":"15","messageId":"16","endLine":7,"endColumn":14},"no-unused-vars","'min' is assigned a value but never used.","Identifier","unusedVar","'max' is assigned a value but never used."]